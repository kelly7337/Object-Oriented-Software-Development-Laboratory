Please list your group members here and answer all questions below.
1. Group members: Ermu Lu

2. The program expects 5 command line arguments.
   10 winning numbers are generated by the program.

3. First, in algorithms.cpp the insert_sort function, it does not change the i's value, 
   so I add "++i" below the while.

4. In lottery.cpp, I found there is a problem in conditions for cout.
   When win if more than half of your numbers are winners, the condition should be
   "matching > (unsigned int)params::USERNUMBERS / 2 + 1".
   But the program still shows "vector subscript out of range".
   I used breakpoint in lottery.cpp and found a problem in binary_search function. 
   So I opened algorithms.cpp and looked at this function.
   In this function, "v.size()" should be changed by "v.size()-1".
   Finally, the program worked. But it looked like I won even after I input 
   the wrong numbers.

5. I used breakpoint and found a problem in binary_search_helper, I changed "(start+end)" 
   to "(start+end)/2". And the condition for equal should be "==" not "=".
   Then I found the problem fixed.

6. Only need one step. 
   In lottery.h, I should change the "WINNINGNUMBERS = 10" to "WINNINGNUMBERS = 20".
   It's easy to maintain the program for using variables instead of numbers, 
   if the numbers should be used frequently.

_________________________________________________________________________________________________________________________________
Author: Jon Shidal

CSE 332S - Debugging practice

This program plays a simple lottery game. A user inputs their chosen numbers on the command line (1-MAXNUMBER). The program then:
1. generates a list of winning numbers
2. sorts that list
3. uses binary search on the sorted list to determine how many user chosen numbers match the winning numbers
4. outputs the winning numbers and whether or not the user won(you win if more than half of the numbers you supply via the command line are winning numbers) 

Possible program return values:
Enums for theses can be found in lottery.h
0 - NOTAWINNER
1 - WINNER
2 - JACKPOT 
-1 - INCORRECTUSAGE

Program parameters and their default values:
Enum for these can be found in lottery.h
MAXNUMBER = 100   (numbers generated by the program will range from 1 - MAXNUMBER)
WINNINGNUMBERS = 10 (how many winning numbers will be generated)
USERNUMBERS = 5 (how many user supplied numbers the program expects, as command line arguments)